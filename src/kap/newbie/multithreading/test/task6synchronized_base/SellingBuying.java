package kap.newbie.multithreading.test.task6synchronized_base;

/**
 * Реализуйте имитацию оптовой базы с тремя поставщиками и тремя покупателями.
 * Максимальное число хранимых товаров определите на свой вкус.
 *
 * Покупатели должны выкупать случайно сгенерированное число товаров при каждом посещении.
 * Если товаров недостаточно – при следующем посещении они должны попытаться купить на 1 единицу товара меньше.
 * Если это число достигает нуля – должно быть сгенерировано новое число. Если база опустела
 * (на ней не осталось товаров) – покупатели должны прекратить ее посещение до новых поставок.
 *
 * Поставщики должны поставлять случайно сгенерированное число товаров при каждом посещении.
 * Если на базе не хватает места для всех товаров поставщика – он должен поставить максимально возможное количество,
 * остальную поставку отложить до следующего посещения. Если число товаров для поставки достигло нуля –
 * должно быть сгенерировано новое число. Если база заполнилась на 100% -
 * поставщики должны прекратить попытки поставок до момента, пока заполняемость базы не достигнет 25%.
 *
 * Логируйте действия покупателей и поставщиков в консоли.
 * Программа должна завершиться при вводе пользователем «Finish» с клавиатуры.
 * Другие пользовательские вводы не предусмотрены.
 *
 * Рекомендую ограничить максимальное значение у Покупателей меньшим лимитом, чем у Поставщиков.
 * В таком случае выполнение программы будет более наглядным.
 *
 * @author Alexandr Korovkin
 */
public class SellingBuying {
    public static void main(String[] args) {

    }
}
